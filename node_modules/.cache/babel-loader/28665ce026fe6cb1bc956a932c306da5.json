{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\tic\\\\src\\\\pages\\\\Game\\\\index.jsx\";\nimport React, { Component } from 'react'; // Alerts\n\nimport Swal from 'sweetalert2'; // Styles\n\nimport './styles.css'; // Bootstrap\n\nimport '../../assets/lib/bootstrap.min.css'; // Router\n\nimport { Redirect, Link } from 'react-router-dom'; // Components\n\nimport Board from '../../components/board';\nimport Field from '../../components/field';\nimport Button from '../../components/button'; // Services\n\nimport { gameData as game_data } from '../../services/data';\nimport { themes } from '../../services/themes';\nexport const quiz = {\n  \"quizTitle\": \"React Quiz Component Demo\",\n  \"quizSynopsis\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim\",\n  \"questions\": [{\n    \"question\": \"How can you access the state of a component from inside of a member function?\",\n    \"questionType\": \"text\",\n    \"answers\": [\"this.getState()\", \"this.prototype.stateValue\", \"this.state\", \"this.values\"],\n    \"correctAnswer\": \"3\",\n    \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n    \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n    \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n  }, {\n    \"question\": \"ReactJS is developed by _____?\",\n    \"questionType\": \"text\",\n    \"answers\": [\"Google Engineers\", \"Facebook Engineers\"],\n    \"correctAnswer\": \"2\",\n    \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n    \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n    \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n  }, {\n    \"question\": \"ReactJS is an MVC based framework?\",\n    \"questionType\": \"text\",\n    \"answers\": [\"True\", \"False\"],\n    \"correctAnswer\": \"2\",\n    \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n    \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n    \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n  }, {\n    \"question\": \"Which of the following concepts is/are key to ReactJS?\",\n    \"questionType\": \"text\",\n    \"answers\": [\"Component-oriented design\", \"Event delegation model\", \"Both of the above\"],\n    \"correctAnswer\": \"3\",\n    \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n    \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n    \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n  }, {\n    \"question\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n    \"questionType\": \"photo\",\n    \"answers\": [\"https://dummyimage.com/600x400/000/fff&text=A\", \"https://dummyimage.com/600x400/000/fff&text=B\", \"https://dummyimage.com/600x400/000/fff&text=C\", \"https://dummyimage.com/600x400/000/fff&text=D\"],\n    \"correctAnswer\": \"1\",\n    \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n    \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n    \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n  }]\n};\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: {\n        p1: {\n          nickname: \"\"\n        },\n        p2: {\n          nickname: \"\"\n        }\n      },\n      board: ['', '', '', '', '', '', '', '', ''],\n      symbols: {\n        options: ['covid19  ', 'flu'],\n        turn_index: Math.round(Math.random(0, 1)),\n\n        change() {\n          this.turn_index = this.turn_index === 0 ? 1 : 0;\n        }\n\n      },\n      winning_sequences: [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]],\n      gameover: false,\n      redirect: false\n    };\n    this.make_play = this.make_play.bind(this);\n    this.check_winning_sequences = this.check_winning_sequences.bind(this);\n    this.check_tied = this.check_tied.bind(this);\n    this.alert = this.alert.bind(this);\n    this.scoreBoard = this.scoreBoard.bind(this);\n    this.start = this.start.bind(this);\n  }\n\n  componentDidMount() {\n    const game = game_data.load();\n    this.setState({\n      game\n    });\n    themes.loadThemes();\n  }\n\n  async make_play(position) {\n    if (this.state.gameover) return false;\n\n    if (this.state.board[position] === '') {\n      const board = this.state.board;\n      board[position] = this.state.symbols.options[this.state.symbols.turn_index];\n      this.setState({\n        board\n      });\n      const check_winning_sequences_index = this.check_winning_sequences(this.state.symbols.options[this.state.symbols.turn_index]);\n\n      if (check_winning_sequences_index >= 0) {\n        this.setState({\n          gameover: true\n        });\n        const state = this.state;\n        const last_round = {\n          roundNumber: state.game.roundNumber,\n          winner: {\n            player: state.symbols.options[state.symbols.turn_index] === \"X\" ? 1 : 2\n          }\n        };\n        const nextGameStatus = game_data.nextRound(last_round);\n\n        if (nextGameStatus.gameover === true) {\n          const data = {\n            title: `Winner: ${nextGameStatus.winner === 1 ? nextGameStatus.p1.nickname : nextGameStatus.p2.nickname}`,\n            text: `\n                        <strong>${this.state.game.p1.nickname}</strong>: ${nextGameStatus.p1.score}<br>\n                        <strong>${this.state.game.p2.nickname}</strong>: ${nextGameStatus.p2.score}<br><br>\n\n                        Settings?\n                        \n                        `,\n            icon: 'success',\n            confirmText: 'Yes!',\n            confirmValue: () => this.setState({\n              redirect: true\n            }),\n\n            canceledValue() {}\n\n          };\n          setTimeout(() => this.alert(data), 150);\n        } else {\n          await game_data.save(nextGameStatus);\n          let timerInterval;\n          Swal.fire({\n            title: 'Next round',\n            html: 'Next round in <b></b> milliseconds.',\n            timer: 700,\n            timerProgressBar: true,\n            onBeforeOpen: () => {\n              Swal.showLoading();\n              timerInterval = setInterval(() => {\n                const content = Swal.getContent();\n\n                if (content) {\n                  const b = content.querySelector('b');\n\n                  if (b) {\n                    b.textContent = Swal.getTimerLeft();\n                  }\n                }\n              }, 100);\n            },\n            onClose: () => {\n              clearInterval(timerInterval);\n              this.start();\n            }\n          }).then(result => {\n            /* Read more about handling dismissals below */\n            if (result.dismiss === Swal.DismissReason.timer) {// console.log('I was closed by the timer')\n            }\n          });\n        }\n      } else {\n        this.state.symbols.change();\n\n        if (this.check_tied()) {\n          this.setState({\n            gameover: true\n          });\n          const data = {\n            title: 'We Tied',\n            text: 'Restart?',\n            icon: 'info',\n            confirmText: 'Yes!',\n            cancelText: 'No!',\n\n            confirmValue() {},\n\n            canceledValue() {}\n\n          };\n          setTimeout(() => this.alert(data), 150);\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  check_winning_sequences(symbol) {\n    let returned = -1; // eslint-disable-next-line\n\n    this.state.winning_sequences.map((value, i) => {\n      if (this.state.board[this.state.winning_sequences[i][0]] === symbol && this.state.board[this.state.winning_sequences[i][1]] === symbol && this.state.board[this.state.winning_sequences[i][2]] === symbol) {\n        returned = i;\n      }\n    });\n    return returned;\n  } // If tied return true\n\n\n  check_tied() {\n    let returned = true; // eslint-disable-next-line\n\n    this.state.board.map((value, i) => {\n      if (this.state.board[i] === '') returned = false;\n    });\n    return returned;\n  }\n\n  alert(data) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success confirmBtn',\n        cancelButton: 'btn btn-secondary cancelBtn'\n      },\n      buttonsStyling: false\n    });\n    swalWithBootstrapButtons.fire({\n      title: data.title,\n      html: data.text,\n      icon: data.icon,\n      showCancelButton: data.cancelText ? true : false,\n      confirmButtonText: data.confirmText,\n      cancelButtonText: data.cancelText,\n      reverseButtons: true\n    }).then(result => {\n      if (result.value) {\n        // Accept\n        this.start();\n        data.confirmValue();\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        // Canceled\n        data.canceledValue();\n      }\n    });\n  }\n\n  scoreBoard() {\n    const game = game_data.load();\n    alert(`\n            ${game.p1.nickname}: ${game.p1.score}\n            ${game.p2.nickname}: ${game.p2.score}\n        `);\n  }\n\n  start() {\n    const symbols = this.state.symbols;\n    let board = this.state.board;\n    symbols.turn_index = Math.round(Math.random(0, 1));\n    board.fill('');\n    this.setState({\n      symbols,\n      board,\n      gameover: false\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Game\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, \"Turn: \", this.state.symbols.options[this.state.symbols.turn_index] === \"covid 19\" ? this.state.game.p1.nickname : this.state.game.p2.nickname, \" (\", this.state.symbols.options[this.state.symbols.turn_index], \")\"), /*#__PURE__*/React.createElement(Board, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }\n      }, this.state.board.map((value, index) => /*#__PURE__*/React.createElement(Field, {\n        key: index,\n        click: () => this.make_play(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 29\n        }\n      }, value))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        value: \"Settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 38\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.scoreBoard(),\n        value: \"Score Board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.start(),\n        value: \"Restart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/tic/src/pages/Game/index.jsx"],"names":["React","Component","Swal","Redirect","Link","Board","Field","Button","gameData","game_data","themes","quiz","Game","constructor","props","state","game","p1","nickname","p2","board","symbols","options","turn_index","Math","round","random","change","winning_sequences","gameover","redirect","make_play","bind","check_winning_sequences","check_tied","alert","scoreBoard","start","componentDidMount","load","setState","loadThemes","position","check_winning_sequences_index","last_round","roundNumber","winner","player","nextGameStatus","nextRound","data","title","text","score","icon","confirmText","confirmValue","canceledValue","setTimeout","save","timerInterval","fire","html","timer","timerProgressBar","onBeforeOpen","showLoading","setInterval","content","getContent","b","querySelector","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","cancelText","symbol","returned","map","value","i","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","cancel","fill","render","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Alerts\r\nimport Swal from 'sweetalert2';\r\n\r\n// Styles\r\nimport './styles.css';\r\n\r\n// Bootstrap\r\nimport '../../assets/lib/bootstrap.min.css';\r\n\r\n// Router\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport Board from '../../components/board';\r\nimport Field from '../../components/field';\r\nimport Button from '../../components/button';\r\n\r\n\r\n// Services\r\nimport { gameData as game_data } from '../../services/data';\r\nimport { themes } from '../../services/themes';\r\n\r\nexport const quiz =  {\r\n    \"quizTitle\": \"React Quiz Component Demo\",\r\n    \"quizSynopsis\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim\",\r\n    \"questions\": [\r\n      {\r\n        \"question\": \"How can you access the state of a component from inside of a member function?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"this.getState()\",\r\n          \"this.prototype.stateValue\",\r\n          \"this.state\",\r\n          \"this.values\"\r\n        ],\r\n        \"correctAnswer\": \"3\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"ReactJS is developed by _____?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"Google Engineers\",\r\n          \"Facebook Engineers\"\r\n        ],\r\n        \"correctAnswer\": \"2\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"ReactJS is an MVC based framework?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"True\",\r\n          \"False\"\r\n        ],\r\n        \"correctAnswer\": \"2\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"Which of the following concepts is/are key to ReactJS?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"Component-oriented design\",\r\n          \"Event delegation model\",\r\n          \"Both of the above\",\r\n        ],\r\n        \"correctAnswer\": \"3\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\r\n        \"questionType\": \"photo\",\r\n        \"answers\": [\r\n          \"https://dummyimage.com/600x400/000/fff&text=A\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=B\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=C\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=D\"\r\n        ],\r\n        \"correctAnswer\": \"1\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\nclass Game extends Component {\r\n\r\n    state = {\r\n        game: {\r\n            p1: {\r\n                nickname: \"\",\r\n            },\r\n            p2: {\r\n                nickname: \"\",\r\n            }\r\n        },\r\n\r\n\r\n        board: ['', '', '', '', '', '', '', '', ''],\r\n        symbols: {\r\n            options: ['covid19  ', 'flu'],\r\n            turn_index: Math.round(Math.random(0, 1)),\r\n            change() {\r\n                this.turn_index = (this.turn_index === 0) ? 1 : 0;\r\n            }\r\n        },\r\n\r\n        winning_sequences: [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ],\r\n        gameover: false,\r\n\r\n        redirect: false\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.make_play = this.make_play.bind(this);\r\n        this.check_winning_sequences = this.check_winning_sequences.bind(this);\r\n        this.check_tied = this.check_tied.bind(this);\r\n        this.alert = this.alert.bind(this);\r\n        this.scoreBoard = this.scoreBoard.bind(this);\r\n        this.start = this.start.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const game = game_data.load();\r\n        this.setState({ game });\r\n        themes.loadThemes();\r\n    }\r\n\r\n\r\n\r\n    async make_play(position) {\r\n\r\n        if (this.state.gameover) return false;\r\n        if (this.state.board[position] === '') {\r\n            const board = this.state.board;\r\n            board[position] = this.state.symbols.options[this.state.symbols.turn_index];\r\n            this.setState({ board })\r\n            const check_winning_sequences_index = this.check_winning_sequences(this.state.symbols.options[this.state.symbols.turn_index])\r\n            if (check_winning_sequences_index >= 0) {\r\n                this.setState({ gameover: true })\r\n\r\n                const state = this.state;\r\n\r\n                const last_round = {\r\n                    roundNumber: state.game.roundNumber,\r\n                    winner: {\r\n                        player: (state.symbols.options[state.symbols.turn_index] === \"X\") ? 1 : 2,\r\n                    }\r\n                }\r\n\r\n                const nextGameStatus = game_data.nextRound(last_round);\r\n                if (nextGameStatus.gameover === true) {\r\n                    const data = {\r\n                        title: `Winner: ${(nextGameStatus.winner === 1) ? nextGameStatus.p1.nickname : nextGameStatus.p2.nickname}`,\r\n                        text: `\r\n                        <strong>${this.state.game.p1.nickname}</strong>: ${nextGameStatus.p1.score}<br>\r\n                        <strong>${this.state.game.p2.nickname}</strong>: ${nextGameStatus.p2.score}<br><br>\r\n\r\n                        Settings?\r\n                        \r\n                        `,\r\n                        icon: 'success',\r\n                        confirmText: 'Yes!',\r\n                        confirmValue: () => this.setState({ redirect: true }),\r\n                        canceledValue() { }\r\n                    }\r\n                    setTimeout(() => this.alert(data), 150);\r\n                } else {\r\n                    await game_data.save(nextGameStatus)\r\n\r\n                    let timerInterval;\r\n                    Swal.fire({\r\n                        title: 'Next round',\r\n                        html: 'Next round in <b></b> milliseconds.',\r\n                        timer: 700,\r\n                        timerProgressBar: true,\r\n                        onBeforeOpen: () => {\r\n                            Swal.showLoading()\r\n                            timerInterval = setInterval(() => {\r\n                                const content = Swal.getContent()\r\n                                if (content) {\r\n                                    const b = content.querySelector('b')\r\n                                    if (b) {\r\n                                        b.textContent = Swal.getTimerLeft()\r\n                                    }\r\n                                }\r\n                            }, 100)\r\n                        },\r\n                        onClose: () => {\r\n                            clearInterval(timerInterval)\r\n                            this.start()\r\n                        }\r\n                    }).then((result) => {\r\n                        /* Read more about handling dismissals below */\r\n                        if (result.dismiss === Swal.DismissReason.timer) {\r\n                            // console.log('I was closed by the timer')\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n\r\n\r\n            } else {\r\n                this.state.symbols.change();\r\n                if (this.check_tied()) {\r\n                    this.setState({ gameover: true })\r\n\r\n\r\n                    const data = {\r\n                        title: 'We Tied',\r\n                        text: 'Restart?',\r\n                        icon: 'info',\r\n                        confirmText: 'Yes!',\r\n                        cancelText: 'No!',\r\n                        confirmValue() { },\r\n                        canceledValue() { }\r\n                    }\r\n\r\n                    setTimeout(() => this.alert(data), 150);\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    check_winning_sequences(symbol) {\r\n\r\n        let returned = -1;\r\n\r\n        // eslint-disable-next-line\r\n        this.state.winning_sequences.map((value, i) => {\r\n            if (this.state.board[this.state.winning_sequences[i][0]] === symbol &&\r\n                this.state.board[this.state.winning_sequences[i][1]] === symbol &&\r\n                this.state.board[this.state.winning_sequences[i][2]] === symbol) {\r\n                returned = i;\r\n            }\r\n        });\r\n        return returned;\r\n    }\r\n\r\n    // If tied return true\r\n    check_tied() {\r\n        let returned = true;\r\n\r\n        // eslint-disable-next-line\r\n        this.state.board.map((value, i) => {\r\n            if (this.state.board[i] === '') returned = false;\r\n        });\r\n        return returned;\r\n    }\r\n\r\n    alert(data) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success confirmBtn',\r\n                cancelButton: 'btn btn-secondary cancelBtn'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: data.title,\r\n            html: data.text,\r\n            icon: data.icon,\r\n            showCancelButton: (data.cancelText) ? true : false,\r\n            confirmButtonText: data.confirmText,\r\n            cancelButtonText: data.cancelText,\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                // Accept\r\n                this.start();\r\n                data.confirmValue();\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                // Canceled\r\n                data.canceledValue();\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    scoreBoard() {\r\n        const game = game_data.load();\r\n        alert(`\r\n            ${game.p1.nickname}: ${game.p1.score}\r\n            ${game.p2.nickname}: ${game.p2.score}\r\n        `);\r\n    }\r\n\r\n\r\n\r\n\r\n    start() {\r\n\r\n        const symbols = this.state.symbols;\r\n        let board = this.state.board;\r\n        symbols.turn_index = Math.round(Math.random(0, 1));\r\n        board.fill('');\r\n\r\n        this.setState({ symbols, board, gameover: false });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            return (\r\n                <div className=\"Game\">\r\n\r\n                    <h1 className=\"player\">Turn: {(this.state.symbols.options[this.state.symbols.turn_index] === \"covid 19\") ? this.state.game.p1.nickname : this.state.game.p2.nickname} ({this.state.symbols.options[this.state.symbols.turn_index]})</h1>\r\n\r\n                    <Board>\r\n                        {this.state.board.map((value, index) =>\r\n                            <Field key={index} click={() => this.make_play(index)}>{value}</Field>)\r\n                        }\r\n                    </Board>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><Button value=\"Settings\" /></Link>\r\n                        <Button onClick={() => this.scoreBoard()} value=\"Score Board\" />\r\n                        <Button onClick={() => this.start()} value=\"Restart\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}