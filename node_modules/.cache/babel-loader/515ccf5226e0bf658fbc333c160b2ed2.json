{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\tic\\\\src\\\\pages\\\\GameSettings\\\\index.jsx\";\nimport React, { Component } from 'react'; // Styles\n\nimport './styles.css'; // Router\n\nimport { Redirect } from 'react-router-dom'; // Components\n\nimport Button from '../../components/button'; // Services\n\nimport { gameData as game_data } from '../../services/data';\nimport { themes } from '../../services/themes';\n\nclass GameSettings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxRounds: 1,\n      redirect: false,\n      nicknameP1: 'Player 1',\n      nicknameP2: 'Player 2',\n      inputP1: '',\n      inputP2: ''\n    };\n    this.setRounds = this.setRounds.bind(this);\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  setRounds(rounds) {\n    this.setState({\n      maxRounds: rounds\n    });\n  }\n\n  async start() {\n    const maxRounds = this.state.maxRounds;\n    const nicknameP1 = this.state.nicknameP1;\n    const nicknameP2 = this.state.nicknameP2;\n    const gameData = await game_data.generateData(maxRounds, nicknameP1, nicknameP2);\n    await game_data.save(gameData);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  componentDidMount() {\n    const data = localStorage.getItem(\"game_data\") ? game_data.load() : {\n      p1: {},\n      p2: {}\n    };\n    const newState = {};\n\n    if (data.p1.nickname && data.p1.nickname !== \"Player 1\") {\n      newState.nicknameP1 = data.p1.nickname;\n      newState.inputP1 = data.p1.nickname;\n    }\n\n    if (data.p2.nickname && data.p2.nickname !== \"Player 2\") {\n      newState.nicknameP2 = data.p2.nickname;\n      newState.inputP2 = data.p2.nickname;\n    }\n\n    if (data.maxRounds) {\n      newState.maxRounds = data.maxRounds;\n    }\n\n    this.setState(newState);\n    localStorage.removeItem(\"game_data\");\n    themes.loadThemes();\n  }\n\n  changeTheme(themeIndex) {\n    switch (themeIndex) {\n      case 0:\n        themes.setTheme(themes.themes_data.dark);\n        break;\n\n      case 1:\n        themes.setTheme(themes.themes_data.red);\n        break;\n\n      default:\n        themes.setTheme(themes.themes_data.dark);\n        break;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/ticTacToe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"GameSettings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"themesSets\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.changeTheme(0),\n        value: themes.themes_data.dark.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.changeTheme(1),\n        value: themes.themes_data.blue.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rounds\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, \"Rounds: \"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setRounds(1),\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setRounds(3),\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setRounds(5),\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"players\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, \"Player 1: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Name...\",\n        className: \"inputNickname\",\n        onChange: e => this.setState({\n          inputP1: e.target.value,\n          nicknameP1: e.target.value\n        }),\n        value: this.state.inputP1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, \"Player 2: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Name...\",\n        className: \"inputNickname\",\n        onChange: e => this.setState({\n          inputP2: e.target.value,\n          nicknameP2: e.target.value\n        }),\n        value: this.state.inputP2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.start(),\n        value: \"Start!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nexport default GameSettings;","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/tic/src/pages/GameSettings/index.jsx"],"names":["React","Component","Redirect","Button","gameData","game_data","themes","GameSettings","constructor","props","state","maxRounds","redirect","nicknameP1","nicknameP2","inputP1","inputP2","setRounds","bind","changeTheme","rounds","setState","start","generateData","save","componentDidMount","data","localStorage","getItem","load","p1","p2","newState","nickname","removeItem","loadThemes","themeIndex","setTheme","themes_data","dark","red","render","title","blue","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;;AACA,OAAO,cAAP,C,CAGA;;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,SAASC,QAAQ,IAAIC,SAArB,QAAsC,qBAAtC;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAIA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAcjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAZnBC,KAYmB,GAZX;AAEJC,MAAAA,SAAS,EAAE,CAFP;AAIJC,MAAAA,QAAQ,EAAE,KAJN;AAKJC,MAAAA,UAAU,EAAE,UALR;AAMJC,MAAAA,UAAU,EAAE,UANR;AAQJC,MAAAA,OAAO,EAAE,EARL;AASJC,MAAAA,OAAO,EAAE;AATL,KAYW;AAGf,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,SAAS,CAACG,MAAD,EAAS;AACd,SAAKC,QAAL,CAAc;AAAEV,MAAAA,SAAS,EAAES;AAAb,KAAd;AACH;;AAED,QAAME,KAAN,GAAc;AACV,UAAMX,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;AACA,UAAME,UAAU,GAAG,KAAKH,KAAL,CAAWG,UAA9B;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAA9B;AAEA,UAAMV,QAAQ,GAAG,MAAMC,SAAS,CAACkB,YAAV,CAAuBZ,SAAvB,EAAkCE,UAAlC,EAA8CC,UAA9C,CAAvB;AACA,UAAMT,SAAS,CAACmB,IAAV,CAAepB,QAAf,CAAN;AACA,SAAKiB,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCvB,SAAS,CAACwB,IAAV,EAApC,GAAuD;AAAEC,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,EAAE,EAAE;AAAd,KAApE;AACA,UAAMC,QAAQ,GAAG,EAAjB;;AACA,QAAIN,IAAI,CAACI,EAAL,CAAQG,QAAR,IAAoBP,IAAI,CAACI,EAAL,CAAQG,QAAR,KAAqB,UAA7C,EAAyD;AACrDD,MAAAA,QAAQ,CAACnB,UAAT,GAAsBa,IAAI,CAACI,EAAL,CAAQG,QAA9B;AACAD,MAAAA,QAAQ,CAACjB,OAAT,GAAmBW,IAAI,CAACI,EAAL,CAAQG,QAA3B;AACH;;AAED,QAAIP,IAAI,CAACK,EAAL,CAAQE,QAAR,IAAoBP,IAAI,CAACK,EAAL,CAAQE,QAAR,KAAqB,UAA7C,EAAyD;AACrDD,MAAAA,QAAQ,CAAClB,UAAT,GAAsBY,IAAI,CAACK,EAAL,CAAQE,QAA9B;AACAD,MAAAA,QAAQ,CAAChB,OAAT,GAAmBU,IAAI,CAACK,EAAL,CAAQE,QAA3B;AACH;;AAED,QAAIP,IAAI,CAACf,SAAT,EAAoB;AAChBqB,MAAAA,QAAQ,CAACrB,SAAT,GAAqBe,IAAI,CAACf,SAA1B;AACH;;AAED,SAAKU,QAAL,CAAcW,QAAd;AAEAL,IAAAA,YAAY,CAACO,UAAb,CAAwB,WAAxB;AAGA5B,IAAAA,MAAM,CAAC6B,UAAP;AAEH;;AAEDhB,EAAAA,WAAW,CAACiB,UAAD,EAAa;AAEpB,YAAQA,UAAR;AACI,WAAK,CAAL;AACI9B,QAAAA,MAAM,CAAC+B,QAAP,CAAgB/B,MAAM,CAACgC,WAAP,CAAmBC,IAAnC;AACA;;AACJ,WAAK,CAAL;AACIjC,QAAAA,MAAM,CAAC+B,QAAP,CAAgB/B,MAAM,CAACgC,WAAP,CAAmBE,GAAnC;AACA;;AACJ;AACIlC,QAAAA,MAAM,CAAC+B,QAAP,CAAgB/B,MAAM,CAACgC,WAAP,CAAmBC,IAAnC;AACA;AATR;AAYH;;AAKDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAK/B,KAAL,CAAWE,QAAf,EAAyB;AACrB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AAEH,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKO,WAAL,CAAiB,CAAjB,CAAvB;AAA4C,QAAA,KAAK,EAAEb,MAAM,CAACgC,WAAP,CAAmBC,IAAnB,CAAwBG,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKvB,WAAL,CAAiB,CAAjB,CAAvB;AAA4C,QAAA,KAAK,EAAEb,MAAM,CAACgC,WAAP,CAAmBK,IAAnB,CAAwBD,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADJ,CADJ,eAcI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKzB,SAAL,CAAe,CAAf,CAAvB;AAA0C,QAAA,KAAK,EAAC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,CAAe,CAAf,CAAvB;AAA0C,QAAA,KAAK,EAAC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,CAAe,CAAf,CAAvB;AAA0C,QAAA,KAAK,EAAC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,CAFJ,CAdJ,eA8BI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,SAAS,EAAC,eAAnD;AAAmE,QAAA,QAAQ,EAAG2B,CAAD,IAAO,KAAKvB,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE6B,CAAC,CAACC,MAAF,CAASC,KAApB;AAA2BjC,UAAAA,UAAU,EAAE+B,CAAC,CAACC,MAAF,CAASC;AAAhD,SAAd,CAApF;AAA4J,QAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWK,OAA9K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,SAAS,EAAC,eAAnD;AAAmE,QAAA,QAAQ,EAAG6B,CAAD,IAAO,KAAKvB,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE4B,CAAC,CAACC,MAAF,CAASC,KAApB;AAA2BhC,UAAAA,UAAU,EAAE8B,CAAC,CAACC,MAAF,CAASC;AAAhD,SAAd,CAApF;AAA4J,QAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWM,OAA9K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,CA9BJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKM,KAAL,EAAvB;AAAqC,QAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAzCJ,CADJ;AA+CH;AACJ;;AArIgC;;AAwIrC,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n// Styles\r\nimport './styles.css';\r\n\r\n\r\n// Router\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// Components\r\nimport Button from '../../components/button';\r\n\r\n// Services\r\nimport { gameData as game_data } from '../../services/data';\r\nimport { themes } from '../../services/themes';\r\n\r\n\r\n\r\nclass GameSettings extends Component {\r\n\r\n    state = {\r\n\r\n        maxRounds: 1,\r\n\r\n        redirect: false,\r\n        nicknameP1: 'Player 1',\r\n        nicknameP2: 'Player 2',\r\n\r\n        inputP1: '',\r\n        inputP2: '',\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setRounds = this.setRounds.bind(this);\r\n        this.changeTheme = this.changeTheme.bind(this);\r\n    }\r\n\r\n    setRounds(rounds) {\r\n        this.setState({ maxRounds: rounds });\r\n    }\r\n\r\n    async start() {\r\n        const maxRounds = this.state.maxRounds;\r\n        const nicknameP1 = this.state.nicknameP1;\r\n        const nicknameP2 = this.state.nicknameP2;\r\n\r\n        const gameData = await game_data.generateData(maxRounds, nicknameP1, nicknameP2);\r\n        await game_data.save(gameData);\r\n        this.setState({ redirect: true });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = localStorage.getItem(\"game_data\") ? game_data.load() : { p1: {}, p2: {} };\r\n        const newState = {};\r\n        if (data.p1.nickname && data.p1.nickname !== \"Player 1\") {\r\n            newState.nicknameP1 = data.p1.nickname;\r\n            newState.inputP1 = data.p1.nickname;\r\n        }\r\n\r\n        if (data.p2.nickname && data.p2.nickname !== \"Player 2\") {\r\n            newState.nicknameP2 = data.p2.nickname;\r\n            newState.inputP2 = data.p2.nickname;\r\n        }\r\n\r\n        if (data.maxRounds) {\r\n            newState.maxRounds = data.maxRounds;\r\n        }\r\n\r\n        this.setState(newState);\r\n\r\n        localStorage.removeItem(\"game_data\")\r\n\r\n\r\n        themes.loadThemes();\r\n\r\n    }\r\n\r\n    changeTheme(themeIndex) {\r\n\r\n        switch (themeIndex) {\r\n            case 0:\r\n                themes.setTheme(themes.themes_data.dark);\r\n                break;\r\n            case 1:\r\n                themes.setTheme(themes.themes_data.red);\r\n                break;\r\n            default:\r\n                themes.setTheme(themes.themes_data.dark);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/ticTacToe\" />\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"GameSettings\">\r\n                    <div className=\"themesSets\">\r\n                        <ul>\r\n                            <li>\r\n                                <Button onClick={() => this.changeTheme(0)} value={themes.themes_data.dark.title} />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.changeTheme(1)} value={themes.themes_data.blue.title} />\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"rounds\">\r\n                        <h1>Rounds: </h1>\r\n                        <ul>\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(1)} value=\"1\" />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(3)} value=\"3\" />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(5)} value=\"5\" />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"players\">\r\n                        <div>\r\n                            <h1>Player 1: </h1>\r\n                            <input type=\"text\" placeholder=\"Name...\" className=\"inputNickname\" onChange={(e) => this.setState({ inputP1: e.target.value, nicknameP1: e.target.value })} value={this.state.inputP1} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h1>Player 2: </h1>\r\n                            <input type=\"text\" placeholder=\"Name...\" className=\"inputNickname\" onChange={(e) => this.setState({ inputP2: e.target.value, nicknameP2: e.target.value })} value={this.state.inputP2} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={() => this.start()} value=\"Start!\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameSettings;"]},"metadata":{},"sourceType":"module"}