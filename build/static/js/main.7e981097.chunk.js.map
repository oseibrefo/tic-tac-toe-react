{"version":3,"sources":["components/button/index.jsx","services/data.js","services/themes.js","assets/themes/themes_data.js","pages/GameSettings/index.jsx","components/board/index.jsx","components/field/index.jsx","pages/Game/index.jsx","routes.js","App.jsx","index.js"],"names":["Button","onClick","this","props","type","className","value","Component","gameData","save","data","JSON","stringify","localStorage","setItem","generateData","maxRounds","nameP1","nameP2","roundNumber","gameover","p1","nickname","score","p2","nextRound","last_round","load","players_data","winner","player","Math","trunc","parse","getItem","themes","themes_data","dark","title","bgc","hover","border","textColor","blue","getStyle","element","property","window","getComputedStyle","getPropertyValue","loadThemes","lcStTm","newTheme","setTheme","theme","html","document","querySelector","style","setProperty","GameSettings","state","redirect","nicknameP1","nicknameP2","inputP1","inputP2","setRounds","bind","changeTheme","rounds","setState","game_data","newState","removeItem","themeIndex","to","placeholder","onChange","e","target","start","Board","children","field","click","Game","game","board","symbols","options","src","alt","img","turn_index","round","random","change","winning_sequences","make_play","check_winning_sequences","check_tied","alert","scoreBoard","position","nextGameStatus","text","icon","confirmText","confirmValue","canceledValue","setTimeout","Swal","fire","timer","timerProgressBar","onBeforeOpen","showLoading","timerInterval","setInterval","content","getContent","b","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","cancelText","symbol","returned","map","i","mixin","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","cancel","fill","index","key","Routes","exact","path","component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e981097.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <input onClick={this.props.onClick} type=\"button\" className=\"btnRst\" value={this.props.value} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","export const gameData = {\r\n\r\n    async save(data) {\r\n        try {\r\n            data = await JSON.stringify(data);\r\n            await localStorage.setItem(\"game_data\", data);\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    generateData(maxRounds, nameP1, nameP2) {\r\n        const game_data = {\r\n            maxRounds,\r\n            roundNumber: 1,\r\n            gameover: false,\r\n            p1: {\r\n                nickname: nameP1,\r\n                score: 0\r\n            },\r\n            p2: {\r\n                nickname: nameP2,\r\n                score: 0\r\n            },\r\n        }\r\n        return game_data;\r\n    },\r\n\r\n    /*\r\n\r\n    const last_round = {\r\n        roundNumber: 1\r\n\r\n        winner: {\r\n            player: 1 | 2\r\n        },\r\n    };\r\n\r\n    */\r\n\r\n    nextRound(last_round) {\r\n        const data = this.load();\r\n        const players_data = {\r\n            p1: {\r\n                nickname: data.p1.nickname,\r\n                score: (last_round.winner.player === 1) ? ++data.p1.score : data.p1.score\r\n            },\r\n\r\n            p2: {\r\n                nickname: data.p2.nickname,\r\n                score: (last_round.winner.player === 2) ? ++data.p2.score : data.p2.score\r\n            }\r\n        };\r\n\r\n\r\n        if (Math.trunc(data.maxRounds / 2) < players_data.p1.score || Math.trunc(data.maxRounds / 2) < players_data.p2.score) {\r\n            return {\r\n                winner: (players_data.p1.score > players_data.p2.score) ? 1 : 2,\r\n                p1: players_data.p1,\r\n                p2: players_data.p2,\r\n                gameover: true,\r\n            };\r\n        }\r\n\r\n\r\n        const next_game_data = {\r\n            maxRounds: data.maxRounds,\r\n            roundNumber: ++last_round.roundNumber,\r\n            gameover: false,\r\n            p1: players_data.p1,\r\n            p2: players_data.p2,\r\n        }\r\n        return next_game_data;\r\n    },\r\n\r\n    load() {\r\n        const game_data = JSON.parse(localStorage.getItem(\"game_data\"));\r\n        return game_data;\r\n    }\r\n\r\n};\r\n","import { themes_data } from '../assets/themes/themes_data';\r\n\r\nexport const themes = {\r\n\r\n    themes_data,\r\n\r\n\r\n    getStyle(element, property) {\r\n        return window.getComputedStyle(element).getPropertyValue(\"--\" + property);\r\n    },\r\n\r\n    loadThemes() {\r\n        // localStorageTheme\r\n        const lcStTm = localStorage.getItem(\"theme\");\r\n        const newTheme = (lcStTm) ? JSON.parse(lcStTm) : this.themes_data.dark;\r\n        this.setTheme(newTheme);\r\n    },\r\n\r\n    setTheme(theme) {\r\n        const html = document.querySelector(\"html\");\r\n        html.style.setProperty(\"--bgc\", theme.bgc);\r\n        html.style.setProperty(\"--hover\", theme.hover);\r\n        html.style.setProperty(\"--border\", theme.border);\r\n        html.style.setProperty(\"--text-color\", theme.textColor);\r\n        this.save(theme);\r\n    },\r\n\r\n    save(theme) {\r\n        localStorage.setItem(\"theme\", JSON.stringify(theme));\r\n    }\r\n};","export const themes_data = {\r\n    dark: {\r\n        title: \"COVID19 Orange Theme Game\",\r\n        bgc: \"#ff7f50\",\r\n        hover: \"#374757\",\r\n        border: \"#25323f\",\r\n        textColor: \"#fff\",\r\n    },\r\n    blue: {\r\n        title: \"COVID19 Pink Theme Game\",\r\n        bgc: \"#ff69b4\",\r\n        hover: \"#4981b9\",\r\n        border: \"#0c59a7\",\r\n        textColor: \"#fff\",\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\n// Styles\r\nimport './styles.css';\r\n\r\n\r\n// Router\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// Components\r\nimport Button from '../../components/button';\r\n\r\n// Services\r\nimport { gameData as game_data } from '../../services/data';\r\nimport { themes } from '../../services/themes';\r\n\r\n\r\n\r\nclass GameSettings extends Component {\r\n\r\n    state = {\r\n\r\n        maxRounds: 1,\r\n\r\n        redirect: false,\r\n        nicknameP1: 'Player 1',\r\n        nicknameP2: 'Player 2',\r\n\r\n        inputP1: '',\r\n        inputP2: '',\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setRounds = this.setRounds.bind(this);\r\n        this.changeTheme = this.changeTheme.bind(this);\r\n    }\r\n\r\n    setRounds(rounds) {\r\n        this.setState({ maxRounds: rounds });\r\n    }\r\n\r\n    async start() {\r\n        const maxRounds = this.state.maxRounds;\r\n        const nicknameP1 = this.state.nicknameP1;\r\n        const nicknameP2 = this.state.nicknameP2;\r\n\r\n        const gameData = await game_data.generateData(maxRounds, nicknameP1, nicknameP2);\r\n        await game_data.save(gameData);\r\n        this.setState({ redirect: true });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = localStorage.getItem(\"game_data\") ? game_data.load() : { p1: {}, p2: {} };\r\n        const newState = {};\r\n        if (data.p1.nickname && data.p1.nickname !== \"Player 1\") {\r\n            newState.nicknameP1 = data.p1.nickname;\r\n            newState.inputP1 = data.p1.nickname;\r\n        }\r\n\r\n        if (data.p2.nickname && data.p2.nickname !== \"Player 2\") {\r\n            newState.nicknameP2 = data.p2.nickname;\r\n            newState.inputP2 = data.p2.nickname;\r\n        }\r\n\r\n        if (data.maxRounds) {\r\n            newState.maxRounds = data.maxRounds;\r\n        }\r\n\r\n        this.setState(newState);\r\n\r\n        localStorage.removeItem(\"game_data\")\r\n\r\n\r\n        themes.loadThemes();\r\n\r\n    }\r\n\r\n    changeTheme(themeIndex) {\r\n\r\n        switch (themeIndex) {\r\n            case 0:\r\n                themes.setTheme(themes.themes_data.dark);\r\n                break;\r\n            case 1:\r\n                themes.setTheme(themes.themes_data.blue);\r\n                break;\r\n            default:\r\n                themes.setTheme(themes.themes_data.dark);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/ticTacToe\" />\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"GameSettings\">\r\n                    <div className=\"themesSets\">\r\n                        <ul>\r\n                            <li>\r\n                                <Button onClick={() => this.changeTheme(0)} value={themes.themes_data.dark.title} />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.changeTheme(1)} value={themes.themes_data.blue.title} />\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"rounds\">\r\n                        <h1>Rounds: </h1>\r\n                        <ul>\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(1)} value=\"1\" />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(3)} value=\"3\" />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Button onClick={() => this.setRounds(5)} value=\"5\" />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"players\">\r\n                        <div>\r\n                            <h1>Player 1: </h1>\r\n                            <input type=\"text\" placeholder=\"Name...\" className=\"inputNickname\" onChange={(e) => this.setState({ inputP1: e.target.value, nicknameP1: e.target.value })} value={this.state.inputP1} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h1>Player 2: </h1>\r\n                            <input type=\"text\" placeholder=\"Name...\" className=\"inputNickname\" onChange={(e) => this.setState({ inputP2: e.target.value, nicknameP2: e.target.value })} value={this.state.inputP2} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={() => this.start()} value=\"Start!\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameSettings;","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nclass Board extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\n\r\nclass field extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"field\" onClick={this.props.click}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default field;","import React, { Component } from 'react';\r\n\r\n// Alerts\r\nimport Swal from 'sweetalert2';\r\n\r\n// Styles\r\nimport './styles.css';\r\n\r\n// Bootstrap\r\nimport '../../assets/lib/bootstrap.min.css';\r\n\r\n// Router\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport Board from '../../components/board';\r\nimport Field from '../../components/field';\r\nimport Button from '../../components/button';\r\n\r\n\r\n// Services\r\nimport { gameData as game_data } from '../../services/data';\r\nimport { themes } from '../../services/themes';\r\n\r\nexport const quiz =  {\r\n    \"quizTitle\": \"React Quiz Component Demo\",\r\n    \"quizSynopsis\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim\",\r\n    \"questions\": [\r\n      {\r\n        \"question\": \"How can you access the state of a component from inside of a member function?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"this.getState()\",\r\n          \"this.prototype.stateValue\",\r\n          \"this.state\",\r\n          \"this.values\"\r\n        ],\r\n        \"correctAnswer\": \"3\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"ReactJS is developed by _____?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"Google Engineers\",\r\n          \"Facebook Engineers\"\r\n        ],\r\n        \"correctAnswer\": \"2\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"ReactJS is an MVC based framework?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"True\",\r\n          \"False\"\r\n        ],\r\n        \"correctAnswer\": \"2\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"Which of the following concepts is/are key to ReactJS?\",\r\n        \"questionType\": \"text\",\r\n        \"answers\": [\r\n          \"Component-oriented design\",\r\n          \"Event delegation model\",\r\n          \"Both of the above\",\r\n        ],\r\n        \"correctAnswer\": \"3\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      },\r\n      {\r\n        \"question\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\r\n        \"questionType\": \"photo\",\r\n        \"answers\": [\r\n          \"https://dummyimage.com/600x400/000/fff&text=A\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=B\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=C\",\r\n          \"https://dummyimage.com/600x400/000/fff&text=D\"\r\n        ],\r\n        \"correctAnswer\": \"1\",\r\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n        \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\nclass Game extends Component {\r\n\r\n    state = {\r\n        game: {\r\n            p1: {\r\n                nickname: \"\",\r\n            },\r\n            p2: {\r\n                nickname: \"\",\r\n            }\r\n        },\r\n\r\n\r\n        board: ['', '', '', '', '', '', '', '', ''],\r\n        symbols: {\r\n            //options: ['covid19  ', 'flu'],\r\n            options: [<img src=\"https://i.ibb.co/XpmLL35/COVIDTEMP.jpg\" alt=\"COVIDTEMP\" border=\"0\"img/>, <img src=\"https://i.ibb.co/vx56BDr/covidimag.jpg\" alt=\"covidimag\" border=\"0\"img/>],\r\n            turn_index: Math.round(Math.random(0, 1)),\r\n            change() {\r\n                this.turn_index = (this.turn_index === 0) ? 1 : 0;\r\n            }\r\n        },\r\n\r\n        winning_sequences: [\r\n            [1, 0, 2],\r\n            [4, 3, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ],\r\n        gameover: false,\r\n\r\n        redirect: false\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.make_play = this.make_play.bind(this);\r\n        this.check_winning_sequences = this.check_winning_sequences.bind(this);\r\n        this.check_tied = this.check_tied.bind(this);\r\n        this.alert = this.alert.bind(this);\r\n        this.scoreBoard = this.scoreBoard.bind(this);\r\n        this.start = this.start.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const game = game_data.load();\r\n        this.setState({ game });\r\n        themes.loadThemes();\r\n    }\r\n\r\n\r\n\r\n    async make_play(position) {\r\n\r\n        if (this.state.gameover) return false;\r\n        if (this.state.board[position] === '') {\r\n            const board = this.state.board;\r\n            board[position] = this.state.symbols.options[this.state.symbols.turn_index];\r\n            this.setState({ board })\r\n            const check_winning_sequences_index = this.check_winning_sequences(this.state.symbols.options[this.state.symbols.turn_index])\r\n            if (check_winning_sequences_index >= 0) {\r\n                this.setState({ gameover: true })\r\n\r\n                const state = this.state;\r\n\r\n                const last_round = {\r\n                    roundNumber: state.game.roundNumber,\r\n                    winner: {\r\n                        player: (state.symbols.options[state.symbols.turn_index] === <img src=\"https://i.ibb.co/XpmLL35/COVIDTEMP.jpg\" alt=\"COVIDTEMP\" border=\"0\"img/>) ? 1 : 2,\r\n                    }\r\n                }\r\n\r\n                const nextGameStatus = game_data.nextRound(last_round);\r\n                if (nextGameStatus.gameover === true) {\r\n                    const data = {\r\n                        title: `Winner: ${(nextGameStatus.winner === 1) ? nextGameStatus.p1.nickname : nextGameStatus.p2.nickname}`,\r\n                        text: `\r\n                        <strong>${this.state.game.p1.nickname}</strong>: ${nextGameStatus.p1.score}<br>\r\n                        <strong>${this.state.game.p2.nickname}</strong>: ${nextGameStatus.p2.score}<br><br>\r\n\r\n                        Settings?\r\n                        \r\n                        `,\r\n                        icon: 'success',\r\n                        confirmText: 'Yes!',\r\n                        confirmValue: () => this.setState({ redirect: true }),\r\n                        canceledValue() { }\r\n                    }\r\n                    setTimeout(() => this.alert(data), 150);\r\n                } else {\r\n                    await game_data.save(nextGameStatus)\r\n\r\n                    let timerInterval;\r\n                    Swal.fire({\r\n                        title: 'Next round',\r\n                        html: 'Next round in <b></b> milliseconds.',\r\n                        timer: 700,\r\n                        timerProgressBar: true,\r\n                        onBeforeOpen: () => {\r\n                            Swal.showLoading()\r\n                            timerInterval = setInterval(() => {\r\n                                const content = Swal.getContent()\r\n                                if (content) {\r\n                                    const b = content.querySelector('b')\r\n                                    if (b) {\r\n                                        b.textContent = Swal.getTimerLeft()\r\n                                    }\r\n                                }\r\n                            }, 100)\r\n                        },\r\n                        onClose: () => {\r\n                            clearInterval(timerInterval)\r\n                            this.start()\r\n                        }\r\n                    }).then((result) => {\r\n                        /* Read more about handling dismissals below */\r\n                        if (result.dismiss === Swal.DismissReason.timer) {\r\n                            // console.log('I was closed by the timer')\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n\r\n\r\n            } else {\r\n                this.state.symbols.change();\r\n                if (this.check_tied()) {\r\n                    this.setState({ gameover: true })\r\n\r\n\r\n                    const data = {\r\n                        title: 'We Tied',\r\n                        text: 'Restart?',\r\n                        icon: 'info',\r\n                        confirmText: 'Yes!',\r\n                        cancelText: 'No!',\r\n                        confirmValue() { },\r\n                        canceledValue() { }\r\n                    }\r\n\r\n                    setTimeout(() => this.alert(data), 150);\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    check_winning_sequences(symbol) {\r\n\r\n        let returned = -1;\r\n\r\n        // eslint-disable-next-line\r\n        this.state.winning_sequences.map((value, i) => {\r\n            if (this.state.board[this.state.winning_sequences[i][0]] === symbol &&\r\n                this.state.board[this.state.winning_sequences[i][1]] === symbol &&\r\n                this.state.board[this.state.winning_sequences[i][2]] === symbol) {\r\n                returned = i;\r\n            }\r\n        });\r\n        return returned;\r\n    }\r\n\r\n    // If tied return true\r\n    check_tied() {\r\n        let returned = true;\r\n\r\n        // eslint-disable-next-line\r\n        this.state.board.map((value, i) => {\r\n            if (this.state.board[i] === '') returned = false;\r\n        });\r\n        return returned;\r\n    }\r\n\r\n    alert(data) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success confirmBtn',\r\n                cancelButton: 'btn btn-secondary cancelBtn'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: data.title,\r\n            html: data.text,\r\n            icon: data.icon,\r\n            showCancelButton: (data.cancelText) ? true : false,\r\n            confirmButtonText: data.confirmText,\r\n            cancelButtonText: data.cancelText,\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                // Accept\r\n                this.start();\r\n                data.confirmValue();\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                // Canceled\r\n                data.canceledValue();\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    scoreBoard() {\r\n        const game = game_data.load();\r\n        alert(`\r\n            ${game.p1.nickname}: ${game.p1.score}\r\n            ${game.p2.nickname}: ${game.p2.score}\r\n        `);\r\n    }\r\n\r\n\r\n\r\n\r\n    start() {\r\n\r\n        const symbols = this.state.symbols;\r\n        let board = this.state.board;\r\n        symbols.turn_index = Math.round(Math.random(0, 1));\r\n        board.fill('');\r\n\r\n        this.setState({ symbols, board, gameover: false });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            return (\r\n                <div className=\"Game\">\r\n\r\n                    <h1 className=\"player\">Turn: {(this.state.symbols.options[this.state.symbols.turn_index] === <img src=\"https://i.ibb.co/XpmLL35/COVIDTEMP.jpg\" alt=\"COVIDTEMP\" border=\"0\"img/>) ? this.state.game.p2.nickname : this.state.game.p1.nickname} ({this.state.symbols.options[this.state.symbols.turn_index]})</h1>\r\n\r\n                    <Board>\r\n                        {this.state.board.map((value, index) =>\r\n                            <Field key={index} click={() => this.make_play(index)}>{value}</Field>)\r\n                        }\r\n                    </Board>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><Button value=\"Settings\" /></Link>\r\n                        <Button onClick={() => this.scoreBoard()} value=\"Score Board\" />\r\n                        <Button onClick={() => this.start()} value=\"Restart\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\n\r\n\r\n// Router\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n// Pages\r\nimport GameSettings from './pages/GameSettings';\r\nimport Game from './pages/Game';\r\n//import { quiz } from './components/quiz';\r\n \r\n  //<Quiz quiz={quiz} showDefaultResult={false} customResultPage={renderCustomResultPage}/\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={GameSettings} />\r\n                    <Route path=\"/ticTacToe\" component={Game} />\r\n                    \r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\n\r\n\r\n// Styles\r\nimport './app.css';\r\n\r\n\r\n// Components\r\nimport Routes from './routes';\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Routes />\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './boot.css';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}